name: "React.JS on CDN"

on:
  push:
    branches:
      - '*'
    paths:
      - 'react/cdn/**'
      - '.github/workflows/create-cdn.yaml'

env:
  APP_NAME: fp-react-cdn
  APP_DIR: react/cdn
  CDN_TEAM: frontendplattform
  CDN_ENV: cdn.dev.nav.no

jobs:
  build-app:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: Install dependencies
        working-directory: ${{ env.APP_DIR }}
        run: npm ci

      - name: Build app
        working-directory: ${{ env.APP_DIR }}
        run: npm run build

      - uses: actions/upload-artifact@master
        name: Upload build artifact
        with:
          name: ${{ env.APP_NAME }}
          path: ${{ env.APP_DIR }}/build


  push-to-cdn:
    runs-on: ubuntu-latest

    needs: build

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@master
        with:
          name: ${{ env.APP_NAME }}
          path: ${{ env.APP_DIR }}/build

      - id: upload
        name: Upload to CDN
        uses: nais/frontend-plattform-cdn-upload-action@main
        with:
          cdn-environment: ${{ env.CDN_ENV }}
          cdn-team-name: ${{ env.CDN_TEAM }}
          source: ${{ env.APP_DIR }}/build/
          source-keep-parent-name: false
          destination: ${{ env.APP_NAME }}

      - run: echo uploaded file ${{ steps.upload.outputs.uploaded }}
        shell: bash

  deploy-to-nais:
    runs-on: ubuntu-latest

    needs: push-to-cdn

    # if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: labs-gcp
          RESOURCE: ${{ env.APP_DIR }}/.nais/service.yaml,${{ env.APP_DIR }}/.nais/ingress.yaml
          #VAR: image=${{ env.docker_image }}
