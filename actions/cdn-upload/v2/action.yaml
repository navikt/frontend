name: "Upload to CDN"
description: "Upload static assets to Frontend Plattform CDN"
inputs:
  cdn-environment:
    description: "CDN environment name (cdn.dev.nav.no or cdn.nav.no)"
    required: false
    default: "cdn.nav.no"
  cdn-team-name:
    description: "CDN team name"
    required: true
  source:
    description: "Source directory"
    required: true
  source-keep-parent-name:
    description: "Keep parent directory name when uploading"
    required: false
    default: "true"
  destination:
    description: "Destination directory"
    required: true
  cache-invalidation:
    description: "Cache invalidation"
    required: false
    default: "false"
  cache-invalidation-background:
    description: "Run cache invalidation in the background without waiting"
    required: false
    default: "true"
  no-cache-paths:
    description: "Comma separated list of paths that should not be cached"
    required: false
    default: ""

outputs:
  uploaded:
    description: "Uploaded files"
    value: ${{ steps.upload-file.outputs.uploaded }}
runs:
  using: "composite"
  steps:
    - id: "cdn"
      shell: bash
      run: |
        # TODO: project number needs to go
        echo "WORKLOAD_IDENTITY_POOL_NAME=projects/718161667033/locations/global/workloadIdentityPools/dev-nais-identity-pool" >> $GITHUB_ENV
        echo "PROJECT_ID=nais-management-7178" >> $GITHUB_ENV
        # V- DELETE THIS GUY, it's only used for cache invalidation which should be handled by nais-console
        echo "LOGICAL_NAME=nais-cdn" >> $GITHUB_ENV

        # V- We need to figure out how to :hocho: these numbers, they shouldn't be exposed to the user
        echo "BUCKET_NAME=nais-cdn-dev-nais-${{ inputs.cdn-team-name }}-75b1" >> $GITHUB_ENV
        echo "SA_EMAIL=cdn-${{ inputs.cdn-team-name }}-69bf@nais-management-7178.iam.gserviceaccount.com" >> $GITHUB_ENV

    # Authenticate with Google Cloud using Workload Identity Federation

    - id: "auth"
      name: "Authenticate to Google Cloud"
      uses: "google-github-actions/auth@v2.1.0"
      with:
        workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_POOL_NAME }}
        service_account: ${{ env.SA_EMAIL }}
        token_format: "access_token"
    - name: "Handle failure"
      if: ${{ failure() && steps.auth.outcome == 'failure' }}
      shell: bash
      run: |
        cat <<EOF
        ::error ::Failed to authenticate to Google Cloud.
        EOF

        echo "Ensure that your team has write access to the Github-repository." >> $GITHUB_STEP_SUMMARY
        echo "Ensure that you grant the following persmissions in your workflow:" >> $GITHUB_STEP_SUMMARY
        echo '```yaml' >> $GITHUB_STEP_SUMMARY
        echo "permissions:" >> $GITHUB_STEP_SUMMARY
        echo "   contents: read" >> $GITHUB_STEP_SUMMARY
        echo "   id-token: write" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

    # Upload files to Google Cloud Storage Bucket connected to CDN
    - id: "upload-file"
      uses: "google-github-actions/upload-cloud-storage@v2"
      with:
        path: "${{ inputs.source }}"
        parent: "${{ inputs.source-keep-parent-name }}"
        destination: "${{ env.BUCKET_NAME }}/${{ inputs.cdn-team-name }}/${{ inputs.destination }}"

    # Invalidate cache if cache-invalidation is set to true
    - name: "Set up Cloud SDK"
      if: ${{ inputs.cache-invalidation == 'true' || inputs.no-cache-paths != '' }}
      uses: "google-github-actions/setup-gcloud@v1"

    - name: Set no-cache metadata
      if: ${{ inputs.no-cache-paths != '' }}
      shell: bash
      run: |
        paths=(${{ inputs.no-cache-paths }})
        IFS=','

        for path in $paths; do
          gsutil setmeta -h "Cache-Control:no-store" "gs://${BUCKET_NAME}/${{ inputs.cdn-team-name }}/$path"
        done
