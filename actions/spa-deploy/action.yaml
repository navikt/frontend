name: 'SPA Deploy Action'
description: 'Upload Single Page Application (SPA) to CDN and deploy to NAIS'
inputs:
  team-name:
    description: 'Team name'
    required: true
  app-name:
    description: 'Application name'
    required: true
  source:
    description: 'Application source directory'
    required: true
  ingress:
    description: 'Application ingress URL'
    required: true

outputs:
  uploaded:
    description: "Uploaded files"
    value: ${{ steps.upload-file.outputs.uploaded }}

runs:
  using: "composite"
  steps:
    - id: setup
      name: Setup for SPA deploy
      uses: navikt/frontend/actions/spa-ingress@main
      with:
        team-name: ${{ inputs.team-name }}
        app-name: ${{ inputs.app-name }}
        ingress: ${{ inputs.ingress }}
        source: ${{ inputs.source }}

    - id: cdn-upload
      name: Upload SPA to CDN
      uses: navikt/frontend/actions/cdn@main
      with:


    - id: nais-deploy
      name: Deploy SPA to NAIS
      uses: nais/deploy/actions/deploy@main
      with:


    # Set environment variables for cdn.dev.nav.no
    - id: 'dev-env'
      if: ${{ inputs.cdn-environment == 'cdn.dev.nav.no' }}
      shell: bash
      run: |
        echo "Setting environment variables for cdn.dev.nav.no"
        echo "PROJECT_ID=95282974971" >> $GITHUB_ENV
        echo "PROJECT_NAME=frontendplattform-dev-2535" >> $GITHUB_ENV
        echo "LOGICAL_NAME=frontend-plattform-dev" >> $GITHUB_ENV
        echo "BUCKET_NAME=frontend-plattform-dev-${{ inputs.cdn-team-name }}" >> $GITHUB_ENV
        echo "SA_NAME=gh-${{ inputs.cdn-team-name }}" >> $GITHUB_ENV

    # Set environment variables for cdn.nav.no
    - id: 'prod-env'
      if: ${{ inputs.cdn-environment == 'cdn.nav.no' }}
      shell: bash
      run: |
        echo "Setting environment variables for cdn.nav.no"
        echo "PROJECT_ID=59294802824" >> $GITHUB_ENV
        echo "PROJECT_NAME=frontendplattform-prod-55b3" >> $GITHUB_ENV
        echo "LOGICAL_NAME=frontend-plattform-prod" >> $GITHUB_ENV
        echo "BUCKET_NAME=frontend-plattform-prod-${{ inputs.cdn-team-name }}" >> $GITHUB_ENV
        echo "SA_NAME=gh-${{ inputs.cdn-team-name }}" >> $GITHUB_ENV

    # Authenticate with Google Cloud using Workload Identity Federation
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      env:
        GCP_PROJECT_ID: ${{ env.PROJECT_ID }}
        GCP_SA_EMAIL: gh-${{ inputs.cdn-team-name }}@${{ env.PROJECT_NAME }}.iam.gserviceaccount.com
      with:
        workload_identity_provider: 'projects/${{ env.PROJECT_ID }}/locations/global/workloadIdentityPools/${{ env.LOGICAL_NAME }}/providers/github-oidc-provider'
        service_account: '${{ env.SA_NAME }}@${{ env.PROJECT_NAME }}.iam.gserviceaccount.com'

    # Upload files to Google Cloud Storage Bucket connected to CDN
    - id: 'upload-file'
      uses: 'google-github-actions/upload-cloud-storage@v0'
      with:
        path: '${{ inputs.source }}'
        parent: '${{ inputs.source-keep-parent-name }}'
        destination: '${{ env.BUCKET_NAME }}/${{ inputs.cdn-team-name }}/${{ inputs.destination }}'

    # Invalidate cache if cache-invalidation is set to true
    - name: 'Set up Cloud SDK'
      if: ${{ inputs.cache-invalidation == 'true' }}
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: 'Invalidating cache'
      if: ${{ inputs.cache-invalidation == 'true' }}
      shell: bash
      run: |
        path="/${{ inputs.cdn-team-name }}/${{ inputs.destination }}"
        path="${path%/}/*"

        async=""
        if [ "${{ inputs.cache-invalidation-background }}" = "true" ]; then
          async="--async"
        fi

        gcloud compute url-maps invalidate-cdn-cache ${{ env.LOGICAL_NAME }} --global $async --path $path

    - if: ${{ inputs.cache-invalidation == 'true' && inputs.cache-invalidation-background == 'true' }}
      shell: bash
      run: |
        path="/${{ inputs.cdn-team-name }}/${{ inputs.destination }}"
        path="${path%/}/*"

        base_url="https://console.cloud.google.com/net-services/loadbalancing/details/httpAdvanced"
        console_url="$base_url/${{ env.LOGICAL_NAME }}?project=${{ env.PROJECT_ID }}"

        echo "### CDN Cache Invalidation" >> $GITHUB_STEP_SUMMARY
        echo "Path: \`$path\`" >> $GITHUB_STEP_SUMMARY
        echo "Cache invalidation is running in the background. It may take up to `15 minutes` \
              before the cache is invalidated. You can check the status of the invalidation in \
              [Google Cloud Console]($console_url) â†’ Caching or set \`cache-invalidation-background\` \
              to \`false\` in order to wait for the invalidation to complete." >> $GITHUB_STEP_SUMMARY
